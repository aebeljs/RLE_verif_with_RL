//
// Generated by Bluespec Compiler (build 9f4a447)
//
// On Thu Mar  4 16:35:28 IST 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_ma_get_inputs              O     1
// mv_get_decompressed_output     O    32
// RDY_mv_get_decompressed_output  O     1
// RDY_ma_send_decompressed_output  O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ma_get_inputs_val              I    64 reg
// EN_ma_get_inputs               I     1
// EN_ma_send_decompressed_output  I     1
//
// Combinational paths from inputs to outputs:
//   (EN_ma_get_inputs,
//    EN_ma_send_decompressed_output) -> mv_get_decompressed_output
//   (EN_ma_get_inputs,
//    EN_ma_send_decompressed_output) -> RDY_mv_get_decompressed_output
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkrle_decompression(CLK,
			   RST_N,

			   ma_get_inputs_val,
			   EN_ma_get_inputs,
			   RDY_ma_get_inputs,

			   mv_get_decompressed_output,
			   RDY_mv_get_decompressed_output,

			   EN_ma_send_decompressed_output,
			   RDY_ma_send_decompressed_output);
  input  CLK;
  input  RST_N;

  // action method ma_get_inputs
  input  [63 : 0] ma_get_inputs_val;
  input  EN_ma_get_inputs;
  output RDY_ma_get_inputs;

  // value method mv_get_decompressed_output
  output [31 : 0] mv_get_decompressed_output;
  output RDY_mv_get_decompressed_output;

  // action method ma_send_decompressed_output
  input  EN_ma_send_decompressed_output;
  output RDY_ma_send_decompressed_output;

  // signals for module outputs
  wire [31 : 0] mv_get_decompressed_output;
  wire RDY_ma_get_inputs,
       RDY_ma_send_decompressed_output,
       RDY_mv_get_decompressed_output;

  // inlined wires
  wire wr_decompressed_output$whas, wr_output_valid$whas;

  // register rg_count_block_0
  reg rg_count_block_0;
  wire rg_count_block_0$D_IN, rg_count_block_0$EN;

  // register rg_count_block_1
  reg rg_count_block_1;
  wire rg_count_block_1$D_IN, rg_count_block_1$EN;

  // register rg_count_block_10
  reg rg_count_block_10;
  wire rg_count_block_10$D_IN, rg_count_block_10$EN;

  // register rg_count_block_11
  reg rg_count_block_11;
  wire rg_count_block_11$D_IN, rg_count_block_11$EN;

  // register rg_count_block_12
  reg rg_count_block_12;
  wire rg_count_block_12$D_IN, rg_count_block_12$EN;

  // register rg_count_block_13
  reg rg_count_block_13;
  wire rg_count_block_13$D_IN, rg_count_block_13$EN;

  // register rg_count_block_14
  reg rg_count_block_14;
  wire rg_count_block_14$D_IN, rg_count_block_14$EN;

  // register rg_count_block_15
  reg rg_count_block_15;
  wire rg_count_block_15$D_IN, rg_count_block_15$EN;

  // register rg_count_block_16
  reg rg_count_block_16;
  wire rg_count_block_16$D_IN, rg_count_block_16$EN;

  // register rg_count_block_17
  reg rg_count_block_17;
  wire rg_count_block_17$D_IN, rg_count_block_17$EN;

  // register rg_count_block_18
  reg rg_count_block_18;
  wire rg_count_block_18$D_IN, rg_count_block_18$EN;

  // register rg_count_block_19
  reg rg_count_block_19;
  wire rg_count_block_19$D_IN, rg_count_block_19$EN;

  // register rg_count_block_2
  reg rg_count_block_2;
  wire rg_count_block_2$D_IN, rg_count_block_2$EN;

  // register rg_count_block_20
  reg rg_count_block_20;
  wire rg_count_block_20$D_IN, rg_count_block_20$EN;

  // register rg_count_block_21
  reg rg_count_block_21;
  wire rg_count_block_21$D_IN, rg_count_block_21$EN;

  // register rg_count_block_22
  reg rg_count_block_22;
  wire rg_count_block_22$D_IN, rg_count_block_22$EN;

  // register rg_count_block_23
  reg rg_count_block_23;
  wire rg_count_block_23$D_IN, rg_count_block_23$EN;

  // register rg_count_block_24
  reg rg_count_block_24;
  wire rg_count_block_24$D_IN, rg_count_block_24$EN;

  // register rg_count_block_25
  reg rg_count_block_25;
  wire rg_count_block_25$D_IN, rg_count_block_25$EN;

  // register rg_count_block_26
  reg rg_count_block_26;
  wire rg_count_block_26$D_IN, rg_count_block_26$EN;

  // register rg_count_block_27
  reg rg_count_block_27;
  wire rg_count_block_27$D_IN, rg_count_block_27$EN;

  // register rg_count_block_28
  reg rg_count_block_28;
  wire rg_count_block_28$D_IN, rg_count_block_28$EN;

  // register rg_count_block_29
  reg rg_count_block_29;
  wire rg_count_block_29$D_IN, rg_count_block_29$EN;

  // register rg_count_block_3
  reg rg_count_block_3;
  wire rg_count_block_3$D_IN, rg_count_block_3$EN;

  // register rg_count_block_30
  reg rg_count_block_30;
  wire rg_count_block_30$D_IN, rg_count_block_30$EN;

  // register rg_count_block_31
  reg rg_count_block_31;
  wire rg_count_block_31$D_IN, rg_count_block_31$EN;

  // register rg_count_block_32
  reg rg_count_block_32;
  wire rg_count_block_32$D_IN, rg_count_block_32$EN;

  // register rg_count_block_33
  reg rg_count_block_33;
  wire rg_count_block_33$D_IN, rg_count_block_33$EN;

  // register rg_count_block_34
  reg rg_count_block_34;
  wire rg_count_block_34$D_IN, rg_count_block_34$EN;

  // register rg_count_block_35
  reg rg_count_block_35;
  wire rg_count_block_35$D_IN, rg_count_block_35$EN;

  // register rg_count_block_36
  reg rg_count_block_36;
  wire rg_count_block_36$D_IN, rg_count_block_36$EN;

  // register rg_count_block_37
  reg rg_count_block_37;
  wire rg_count_block_37$D_IN, rg_count_block_37$EN;

  // register rg_count_block_38
  reg rg_count_block_38;
  wire rg_count_block_38$D_IN, rg_count_block_38$EN;

  // register rg_count_block_39
  reg rg_count_block_39;
  wire rg_count_block_39$D_IN, rg_count_block_39$EN;

  // register rg_count_block_4
  reg rg_count_block_4;
  wire rg_count_block_4$D_IN, rg_count_block_4$EN;

  // register rg_count_block_40
  reg rg_count_block_40;
  wire rg_count_block_40$D_IN, rg_count_block_40$EN;

  // register rg_count_block_41
  reg rg_count_block_41;
  wire rg_count_block_41$D_IN, rg_count_block_41$EN;

  // register rg_count_block_42
  reg rg_count_block_42;
  wire rg_count_block_42$D_IN, rg_count_block_42$EN;

  // register rg_count_block_43
  reg rg_count_block_43;
  wire rg_count_block_43$D_IN, rg_count_block_43$EN;

  // register rg_count_block_44
  reg rg_count_block_44;
  wire rg_count_block_44$D_IN, rg_count_block_44$EN;

  // register rg_count_block_45
  reg rg_count_block_45;
  wire rg_count_block_45$D_IN, rg_count_block_45$EN;

  // register rg_count_block_46
  reg rg_count_block_46;
  wire rg_count_block_46$D_IN, rg_count_block_46$EN;

  // register rg_count_block_47
  reg rg_count_block_47;
  wire rg_count_block_47$D_IN, rg_count_block_47$EN;

  // register rg_count_block_48
  reg rg_count_block_48;
  wire rg_count_block_48$D_IN, rg_count_block_48$EN;

  // register rg_count_block_49
  reg rg_count_block_49;
  wire rg_count_block_49$D_IN, rg_count_block_49$EN;

  // register rg_count_block_5
  reg rg_count_block_5;
  wire rg_count_block_5$D_IN, rg_count_block_5$EN;

  // register rg_count_block_50
  reg rg_count_block_50;
  wire rg_count_block_50$D_IN, rg_count_block_50$EN;

  // register rg_count_block_51
  reg rg_count_block_51;
  wire rg_count_block_51$D_IN, rg_count_block_51$EN;

  // register rg_count_block_52
  reg rg_count_block_52;
  wire rg_count_block_52$D_IN, rg_count_block_52$EN;

  // register rg_count_block_53
  reg rg_count_block_53;
  wire rg_count_block_53$D_IN, rg_count_block_53$EN;

  // register rg_count_block_54
  reg rg_count_block_54;
  wire rg_count_block_54$D_IN, rg_count_block_54$EN;

  // register rg_count_block_55
  reg rg_count_block_55;
  wire rg_count_block_55$D_IN, rg_count_block_55$EN;

  // register rg_count_block_56
  reg rg_count_block_56;
  wire rg_count_block_56$D_IN, rg_count_block_56$EN;

  // register rg_count_block_57
  reg rg_count_block_57;
  wire rg_count_block_57$D_IN, rg_count_block_57$EN;

  // register rg_count_block_58
  reg rg_count_block_58;
  wire rg_count_block_58$D_IN, rg_count_block_58$EN;

  // register rg_count_block_59
  reg rg_count_block_59;
  wire rg_count_block_59$D_IN, rg_count_block_59$EN;

  // register rg_count_block_6
  reg rg_count_block_6;
  wire rg_count_block_6$D_IN, rg_count_block_6$EN;

  // register rg_count_block_60
  reg rg_count_block_60;
  wire rg_count_block_60$D_IN, rg_count_block_60$EN;

  // register rg_count_block_61
  reg rg_count_block_61;
  wire rg_count_block_61$D_IN, rg_count_block_61$EN;

  // register rg_count_block_62
  reg rg_count_block_62;
  wire rg_count_block_62$D_IN, rg_count_block_62$EN;

  // register rg_count_block_63
  reg rg_count_block_63;
  wire rg_count_block_63$D_IN, rg_count_block_63$EN;

  // register rg_count_block_7
  reg rg_count_block_7;
  wire rg_count_block_7$D_IN, rg_count_block_7$EN;

  // register rg_count_block_8
  reg rg_count_block_8;
  wire rg_count_block_8$D_IN, rg_count_block_8$EN;

  // register rg_count_block_9
  reg rg_count_block_9;
  wire rg_count_block_9$D_IN, rg_count_block_9$EN;

  // register rg_count_valid
  reg rg_count_valid;
  wire rg_count_valid$D_IN, rg_count_valid$EN;

  // register rg_count_width
  reg [3 : 0] rg_count_width;
  wire [3 : 0] rg_count_width$D_IN;
  wire rg_count_width$EN;

  // register rg_counter
  reg [7 : 0] rg_counter;
  wire [7 : 0] rg_counter$D_IN;
  wire rg_counter$EN;

  // register rg_counter_valid
  reg rg_counter_valid;
  wire rg_counter_valid$D_IN, rg_counter_valid$EN;

  // register rg_is_next_word
  reg rg_is_next_word;
  wire rg_is_next_word$D_IN, rg_is_next_word$EN;

  // register rg_next_count
  reg [3 : 0] rg_next_count;
  wire [3 : 0] rg_next_count$D_IN;
  wire rg_next_count$EN;

  // register rg_word_block_0
  reg [3 : 0] rg_word_block_0;
  wire [3 : 0] rg_word_block_0$D_IN;
  wire rg_word_block_0$EN;

  // register rg_word_block_1
  reg [3 : 0] rg_word_block_1;
  wire [3 : 0] rg_word_block_1$D_IN;
  wire rg_word_block_1$EN;

  // register rg_word_block_10
  reg [3 : 0] rg_word_block_10;
  wire [3 : 0] rg_word_block_10$D_IN;
  wire rg_word_block_10$EN;

  // register rg_word_block_11
  reg [3 : 0] rg_word_block_11;
  wire [3 : 0] rg_word_block_11$D_IN;
  wire rg_word_block_11$EN;

  // register rg_word_block_12
  reg [3 : 0] rg_word_block_12;
  wire [3 : 0] rg_word_block_12$D_IN;
  wire rg_word_block_12$EN;

  // register rg_word_block_13
  reg [3 : 0] rg_word_block_13;
  wire [3 : 0] rg_word_block_13$D_IN;
  wire rg_word_block_13$EN;

  // register rg_word_block_14
  reg [3 : 0] rg_word_block_14;
  wire [3 : 0] rg_word_block_14$D_IN;
  wire rg_word_block_14$EN;

  // register rg_word_block_15
  reg [3 : 0] rg_word_block_15;
  wire [3 : 0] rg_word_block_15$D_IN;
  wire rg_word_block_15$EN;

  // register rg_word_block_2
  reg [3 : 0] rg_word_block_2;
  wire [3 : 0] rg_word_block_2$D_IN;
  wire rg_word_block_2$EN;

  // register rg_word_block_3
  reg [3 : 0] rg_word_block_3;
  wire [3 : 0] rg_word_block_3$D_IN;
  wire rg_word_block_3$EN;

  // register rg_word_block_4
  reg [3 : 0] rg_word_block_4;
  wire [3 : 0] rg_word_block_4$D_IN;
  wire rg_word_block_4$EN;

  // register rg_word_block_5
  reg [3 : 0] rg_word_block_5;
  wire [3 : 0] rg_word_block_5$D_IN;
  wire rg_word_block_5$EN;

  // register rg_word_block_6
  reg [3 : 0] rg_word_block_6;
  wire [3 : 0] rg_word_block_6$D_IN;
  wire rg_word_block_6$EN;

  // register rg_word_block_7
  reg [3 : 0] rg_word_block_7;
  wire [3 : 0] rg_word_block_7$D_IN;
  wire rg_word_block_7$EN;

  // register rg_word_block_8
  reg [3 : 0] rg_word_block_8;
  wire [3 : 0] rg_word_block_8$D_IN;
  wire rg_word_block_8$EN;

  // register rg_word_block_9
  reg [3 : 0] rg_word_block_9;
  wire [3 : 0] rg_word_block_9$D_IN;
  wire rg_word_block_9$EN;

  // register rg_word_counter
  reg [4 : 0] rg_word_counter;
  wire [4 : 0] rg_word_counter$D_IN;
  wire rg_word_counter$EN;

  // register rg_word_valid
  reg rg_word_valid;
  wire rg_word_valid$D_IN, rg_word_valid$EN;

  // register rg_word_width
  reg [3 : 0] rg_word_width;
  wire [3 : 0] rg_word_width$D_IN;
  wire rg_word_width$EN;

  // register rg_zero_counter
  reg [6 : 0] rg_zero_counter;
  wire [6 : 0] rg_zero_counter$D_IN;
  wire rg_zero_counter$EN;

  // rule scheduling signals
  wire WILL_FIRE_RL_rl_decompress_word,
       WILL_FIRE_RL_rl_decompress_zero,
       WILL_FIRE_RL_rl_update_counter;

  // inputs to muxes for submodule ports
  wire [31 : 0] MUX_wr_decompressed_output$wset_1__VAL_1;
  wire [7 : 0] MUX_rg_counter$write_1__VAL_1, MUX_rg_counter$write_1__VAL_2;
  wire [6 : 0] MUX_rg_zero_counter$write_1__VAL_1,
	       MUX_rg_zero_counter$write_1__VAL_2;
  wire MUX_rg_count_valid$write_1__SEL_1,
       MUX_rg_counter_valid$write_1__SEL_2,
       MUX_rg_is_next_word$write_1__SEL_1,
       MUX_rg_word_counter$write_1__SEL_1;

  // remaining internal signals
  reg [7 : 0] y__h11729;
  reg [3 : 0] spliced_bits__h5632,
	      spliced_bits__h5660,
	      spliced_bits__h5688,
	      spliced_bits__h5715,
	      spliced_bits__h5745,
	      spliced_bits__h5772,
	      spliced_bits__h5801,
	      spliced_bits__h5828;
  reg SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202,
      SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211;
  wire [31 : 0] _theResult_____2__h5510, _theResult____h5509;
  wire [27 : 0] IF_rg_word_width_0_ULE_1_6_THEN_0_ELSE_0_CONCA_ETC___d37;
  wire [7 : 0] IF_IF_rg_next_count_1_EQ_0_2_THEN_rg_count_wid_ETC___d218,
	       IF_rg_next_count_1_EQ_0_2_THEN_IF_IF_rg_next_c_ETC___d222,
	       IF_rg_next_count_1_ULE_1_6_THEN_IF_rg_next_cou_ETC___d227,
	       IF_rg_next_count_1_ULE_2_5_THEN_IF_rg_next_cou_ETC___d232,
	       IF_rg_next_count_1_ULE_3_4_THEN_IF_rg_next_cou_ETC___d237,
	       IF_rg_next_count_1_ULE_4_3_THEN_IF_rg_next_cou_ETC___d242,
	       IF_rg_next_count_1_ULE_5_2_THEN_IF_rg_next_cou_ETC___d247,
	       IF_rg_next_count_1_ULE_6_1_THEN_IF_rg_next_cou_ETC___d252,
	       _theResult_____1__h6914,
	       _theResult_____3__h6913,
	       _theResult_____4__h6912,
	       _theResult_____5__h6911,
	       _theResult_____6__h6910,
	       _theResult_____7__h6909,
	       _theResult_____8__h6908,
	       lv_zero_count__h6907,
	       result__h10199,
	       result__h10428,
	       result__h6975,
	       result__h6992,
	       result__h7009,
	       result__h7026,
	       result__h7043,
	       result__h7060,
	       result__h7077,
	       result__h7094,
	       result__h7117,
	       result__h9283,
	       result__h9512,
	       result__h9741,
	       result__h9970,
	       x__h10198,
	       x__h10427,
	       x__h11551,
	       x__h7116,
	       x__h9282,
	       x__h9511,
	       x__h9740,
	       x__h9969,
	       y__h10922,
	       y__h10947,
	       y__h10972,
	       y__h10997,
	       y__h11022,
	       y__h11047,
	       y__h11072;
  wire [6 : 0] lv_update_count__h6833,
	       lv_update_count__h6902,
	       x__h10208,
	       x__h10437,
	       x__h11652,
	       x__h7126,
	       x__h9292,
	       x__h9521,
	       x__h9750,
	       x__h9979,
	       y_avValue_fst__h6895;
  wire [4 : 0] lv_update_count__h5507,
	       x__h6417,
	       x__h6469,
	       x__h6520,
	       x__h6571,
	       x__h6622,
	       x__h6673,
	       x__h6723;
  wire [3 : 0] lv_allowed_count__h6905,
	       x__h10901,
	       x__h10926,
	       x__h10951,
	       x__h10976,
	       x__h11001,
	       x__h11026,
	       x__h11051,
	       y_avValue_snd_snd__h6964;
  wire IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278,
       IF_rg_next_count_1_ULE_7_0_THEN_IF_rg_next_cou_ETC___d271;

  // action method ma_get_inputs
  assign RDY_ma_get_inputs = !rg_count_valid || !rg_word_valid ;

  // value method mv_get_decompressed_output
  assign mv_get_decompressed_output =
	     WILL_FIRE_RL_rl_decompress_word ?
	       MUX_wr_decompressed_output$wset_1__VAL_1 :
	       32'd0 ;
  assign RDY_mv_get_decompressed_output =
	     wr_output_valid$whas && wr_decompressed_output$whas ;

  // action method ma_send_decompressed_output
  assign RDY_ma_send_decompressed_output =
	     rg_word_valid && rg_count_valid && rg_next_count == 4'd0 ;

  // rule RL_rl_decompress_word
  assign WILL_FIRE_RL_rl_decompress_word =
	     EN_ma_send_decompressed_output && rg_is_next_word &&
	     rg_counter == 8'd0 &&
	     !EN_ma_get_inputs ;

  // rule RL_rl_update_counter
  assign WILL_FIRE_RL_rl_update_counter =
	     (rg_counter == 8'd0 || rg_next_count != 4'd0) &&
	     !rg_counter_valid &&
	     rg_count_valid &&
	     !WILL_FIRE_RL_rl_decompress_word &&
	     !EN_ma_get_inputs ;

  // rule RL_rl_decompress_zero
  assign WILL_FIRE_RL_rl_decompress_zero =
	     EN_ma_send_decompressed_output && rg_counter != 8'd0 &&
	     rg_next_count == 4'd0 ;

  // inputs to muxes for submodule ports
  assign MUX_rg_count_valid$write_1__SEL_1 =
	     EN_ma_get_inputs && !rg_count_valid ;
  assign MUX_rg_counter_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_decompress_zero && rg_counter == 8'd1 &&
	     !rg_is_next_word ;
  assign MUX_rg_is_next_word$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_update_counter &&
	     IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278 &&
	     (_theResult_____1__h6914 == 8'd0 ||
	      !IF_rg_next_count_1_ULE_7_0_THEN_IF_rg_next_cou_ETC___d271) ;
  assign MUX_rg_word_counter$write_1__SEL_1 =
	     EN_ma_get_inputs && rg_count_valid ;
  assign MUX_rg_counter$write_1__VAL_1 = rg_counter - 8'd1 ;
  assign MUX_rg_counter$write_1__VAL_2 =
	     IF_rg_next_count_1_ULE_7_0_THEN_IF_rg_next_cou_ETC___d271 ?
	       x__h11551 :
	       _theResult_____1__h6914 ;
  assign MUX_rg_zero_counter$write_1__VAL_1 =
	     (rg_zero_counter == 7'd0) ? 7'd8 : 7'd0 ;
  assign MUX_rg_zero_counter$write_1__VAL_2 =
	     IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278 ?
	       lv_update_count__h6902 :
	       7'd64 ;
  assign MUX_wr_decompressed_output$wset_1__VAL_1 =
	     (rg_word_width <= 4'd4) ?
	       _theResult_____2__h5510 :
	       { spliced_bits__h5632,
		 spliced_bits__h5660,
		 spliced_bits__h5688,
		 spliced_bits__h5715,
		 _theResult_____2__h5510[15:0] } ;

  // inlined wires
  assign wr_output_valid$whas =
	     WILL_FIRE_RL_rl_decompress_zero ||
	     WILL_FIRE_RL_rl_decompress_word ;
  assign wr_decompressed_output$whas =
	     WILL_FIRE_RL_rl_decompress_word ||
	     WILL_FIRE_RL_rl_decompress_zero ;

  // register rg_count_block_0
  assign rg_count_block_0$D_IN = ma_get_inputs_val[0] ;
  assign rg_count_block_0$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_1
  assign rg_count_block_1$D_IN = ma_get_inputs_val[1] ;
  assign rg_count_block_1$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_10
  assign rg_count_block_10$D_IN = ma_get_inputs_val[10] ;
  assign rg_count_block_10$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_11
  assign rg_count_block_11$D_IN = ma_get_inputs_val[11] ;
  assign rg_count_block_11$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_12
  assign rg_count_block_12$D_IN = ma_get_inputs_val[12] ;
  assign rg_count_block_12$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_13
  assign rg_count_block_13$D_IN = ma_get_inputs_val[13] ;
  assign rg_count_block_13$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_14
  assign rg_count_block_14$D_IN = ma_get_inputs_val[14] ;
  assign rg_count_block_14$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_15
  assign rg_count_block_15$D_IN = ma_get_inputs_val[15] ;
  assign rg_count_block_15$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_16
  assign rg_count_block_16$D_IN = ma_get_inputs_val[16] ;
  assign rg_count_block_16$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_17
  assign rg_count_block_17$D_IN = ma_get_inputs_val[17] ;
  assign rg_count_block_17$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_18
  assign rg_count_block_18$D_IN = ma_get_inputs_val[18] ;
  assign rg_count_block_18$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_19
  assign rg_count_block_19$D_IN = ma_get_inputs_val[19] ;
  assign rg_count_block_19$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_2
  assign rg_count_block_2$D_IN = ma_get_inputs_val[2] ;
  assign rg_count_block_2$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_20
  assign rg_count_block_20$D_IN = ma_get_inputs_val[20] ;
  assign rg_count_block_20$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_21
  assign rg_count_block_21$D_IN = ma_get_inputs_val[21] ;
  assign rg_count_block_21$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_22
  assign rg_count_block_22$D_IN = ma_get_inputs_val[22] ;
  assign rg_count_block_22$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_23
  assign rg_count_block_23$D_IN = ma_get_inputs_val[23] ;
  assign rg_count_block_23$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_24
  assign rg_count_block_24$D_IN = ma_get_inputs_val[24] ;
  assign rg_count_block_24$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_25
  assign rg_count_block_25$D_IN = ma_get_inputs_val[25] ;
  assign rg_count_block_25$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_26
  assign rg_count_block_26$D_IN = ma_get_inputs_val[26] ;
  assign rg_count_block_26$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_27
  assign rg_count_block_27$D_IN = ma_get_inputs_val[27] ;
  assign rg_count_block_27$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_28
  assign rg_count_block_28$D_IN = ma_get_inputs_val[28] ;
  assign rg_count_block_28$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_29
  assign rg_count_block_29$D_IN = ma_get_inputs_val[29] ;
  assign rg_count_block_29$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_3
  assign rg_count_block_3$D_IN = ma_get_inputs_val[3] ;
  assign rg_count_block_3$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_30
  assign rg_count_block_30$D_IN = ma_get_inputs_val[30] ;
  assign rg_count_block_30$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_31
  assign rg_count_block_31$D_IN = ma_get_inputs_val[31] ;
  assign rg_count_block_31$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_32
  assign rg_count_block_32$D_IN = ma_get_inputs_val[32] ;
  assign rg_count_block_32$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_33
  assign rg_count_block_33$D_IN = ma_get_inputs_val[33] ;
  assign rg_count_block_33$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_34
  assign rg_count_block_34$D_IN = ma_get_inputs_val[34] ;
  assign rg_count_block_34$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_35
  assign rg_count_block_35$D_IN = ma_get_inputs_val[35] ;
  assign rg_count_block_35$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_36
  assign rg_count_block_36$D_IN = ma_get_inputs_val[36] ;
  assign rg_count_block_36$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_37
  assign rg_count_block_37$D_IN = ma_get_inputs_val[37] ;
  assign rg_count_block_37$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_38
  assign rg_count_block_38$D_IN = ma_get_inputs_val[38] ;
  assign rg_count_block_38$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_39
  assign rg_count_block_39$D_IN = ma_get_inputs_val[39] ;
  assign rg_count_block_39$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_4
  assign rg_count_block_4$D_IN = ma_get_inputs_val[4] ;
  assign rg_count_block_4$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_40
  assign rg_count_block_40$D_IN = ma_get_inputs_val[40] ;
  assign rg_count_block_40$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_41
  assign rg_count_block_41$D_IN = ma_get_inputs_val[41] ;
  assign rg_count_block_41$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_42
  assign rg_count_block_42$D_IN = ma_get_inputs_val[42] ;
  assign rg_count_block_42$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_43
  assign rg_count_block_43$D_IN = ma_get_inputs_val[43] ;
  assign rg_count_block_43$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_44
  assign rg_count_block_44$D_IN = ma_get_inputs_val[44] ;
  assign rg_count_block_44$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_45
  assign rg_count_block_45$D_IN = ma_get_inputs_val[45] ;
  assign rg_count_block_45$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_46
  assign rg_count_block_46$D_IN = ma_get_inputs_val[46] ;
  assign rg_count_block_46$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_47
  assign rg_count_block_47$D_IN = ma_get_inputs_val[47] ;
  assign rg_count_block_47$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_48
  assign rg_count_block_48$D_IN = ma_get_inputs_val[48] ;
  assign rg_count_block_48$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_49
  assign rg_count_block_49$D_IN = ma_get_inputs_val[49] ;
  assign rg_count_block_49$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_5
  assign rg_count_block_5$D_IN = ma_get_inputs_val[5] ;
  assign rg_count_block_5$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_50
  assign rg_count_block_50$D_IN = ma_get_inputs_val[50] ;
  assign rg_count_block_50$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_51
  assign rg_count_block_51$D_IN = ma_get_inputs_val[51] ;
  assign rg_count_block_51$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_52
  assign rg_count_block_52$D_IN = ma_get_inputs_val[52] ;
  assign rg_count_block_52$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_53
  assign rg_count_block_53$D_IN = ma_get_inputs_val[53] ;
  assign rg_count_block_53$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_54
  assign rg_count_block_54$D_IN = ma_get_inputs_val[54] ;
  assign rg_count_block_54$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_55
  assign rg_count_block_55$D_IN = ma_get_inputs_val[55] ;
  assign rg_count_block_55$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_56
  assign rg_count_block_56$D_IN = ma_get_inputs_val[56] ;
  assign rg_count_block_56$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_57
  assign rg_count_block_57$D_IN = ma_get_inputs_val[57] ;
  assign rg_count_block_57$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_58
  assign rg_count_block_58$D_IN = ma_get_inputs_val[58] ;
  assign rg_count_block_58$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_59
  assign rg_count_block_59$D_IN = ma_get_inputs_val[59] ;
  assign rg_count_block_59$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_6
  assign rg_count_block_6$D_IN = ma_get_inputs_val[6] ;
  assign rg_count_block_6$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_60
  assign rg_count_block_60$D_IN = ma_get_inputs_val[60] ;
  assign rg_count_block_60$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_61
  assign rg_count_block_61$D_IN = ma_get_inputs_val[61] ;
  assign rg_count_block_61$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_62
  assign rg_count_block_62$D_IN = ma_get_inputs_val[62] ;
  assign rg_count_block_62$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_63
  assign rg_count_block_63$D_IN = ma_get_inputs_val[63] ;
  assign rg_count_block_63$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_7
  assign rg_count_block_7$D_IN = ma_get_inputs_val[7] ;
  assign rg_count_block_7$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_8
  assign rg_count_block_8$D_IN = ma_get_inputs_val[8] ;
  assign rg_count_block_8$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_block_9
  assign rg_count_block_9$D_IN = ma_get_inputs_val[9] ;
  assign rg_count_block_9$EN = MUX_rg_count_valid$write_1__SEL_1 ;

  // register rg_count_valid
  assign rg_count_valid$D_IN = MUX_rg_count_valid$write_1__SEL_1 ;
  assign rg_count_valid$EN =
	     EN_ma_get_inputs && !rg_count_valid ||
	     WILL_FIRE_RL_rl_update_counter &&
	     !IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278 ;

  // register rg_count_width
  assign rg_count_width$D_IN = ma_get_inputs_val[7:4] ;
  assign rg_count_width$EN =
	     EN_ma_get_inputs && !rg_count_valid && rg_zero_counter == 7'd0 ;

  // register rg_counter
  assign rg_counter$D_IN =
	     WILL_FIRE_RL_rl_decompress_zero ?
	       MUX_rg_counter$write_1__VAL_1 :
	       MUX_rg_counter$write_1__VAL_2 ;
  assign rg_counter$EN =
	     WILL_FIRE_RL_rl_decompress_zero ||
	     WILL_FIRE_RL_rl_update_counter ;

  // register rg_counter_valid
  assign rg_counter_valid$D_IN =
	     !MUX_rg_counter_valid$write_1__SEL_2 &&
	     !WILL_FIRE_RL_rl_decompress_word ;
  assign rg_counter_valid$EN =
	     WILL_FIRE_RL_rl_update_counter &&
	     IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278 ||
	     WILL_FIRE_RL_rl_decompress_zero && rg_counter == 8'd1 &&
	     !rg_is_next_word ||
	     WILL_FIRE_RL_rl_decompress_word ;

  // register rg_is_next_word
  assign rg_is_next_word$D_IN = MUX_rg_is_next_word$write_1__SEL_1 ;
  assign rg_is_next_word$EN =
	     WILL_FIRE_RL_rl_update_counter &&
	     IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278 &&
	     (_theResult_____1__h6914 == 8'd0 ||
	      !IF_rg_next_count_1_ULE_7_0_THEN_IF_rg_next_cou_ETC___d271) ||
	     WILL_FIRE_RL_rl_decompress_word ;

  // register rg_next_count
  assign rg_next_count$D_IN =
	     (rg_next_count == 4'd0) ? x__h11652[3:0] : 4'd0 ;
  assign rg_next_count$EN =
	     WILL_FIRE_RL_rl_update_counter &&
	     (rg_next_count != 4'd0 ||
	      !IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278) ;

  // register rg_word_block_0
  assign rg_word_block_0$D_IN = ma_get_inputs_val[3:0] ;
  assign rg_word_block_0$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_1
  assign rg_word_block_1$D_IN = ma_get_inputs_val[7:4] ;
  assign rg_word_block_1$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_10
  assign rg_word_block_10$D_IN = ma_get_inputs_val[43:40] ;
  assign rg_word_block_10$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_11
  assign rg_word_block_11$D_IN = ma_get_inputs_val[47:44] ;
  assign rg_word_block_11$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_12
  assign rg_word_block_12$D_IN = ma_get_inputs_val[51:48] ;
  assign rg_word_block_12$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_13
  assign rg_word_block_13$D_IN = ma_get_inputs_val[55:52] ;
  assign rg_word_block_13$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_14
  assign rg_word_block_14$D_IN = ma_get_inputs_val[59:56] ;
  assign rg_word_block_14$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_15
  assign rg_word_block_15$D_IN = ma_get_inputs_val[63:60] ;
  assign rg_word_block_15$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_2
  assign rg_word_block_2$D_IN = ma_get_inputs_val[11:8] ;
  assign rg_word_block_2$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_3
  assign rg_word_block_3$D_IN = ma_get_inputs_val[15:12] ;
  assign rg_word_block_3$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_4
  assign rg_word_block_4$D_IN = ma_get_inputs_val[19:16] ;
  assign rg_word_block_4$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_5
  assign rg_word_block_5$D_IN = ma_get_inputs_val[23:20] ;
  assign rg_word_block_5$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_6
  assign rg_word_block_6$D_IN = ma_get_inputs_val[27:24] ;
  assign rg_word_block_6$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_7
  assign rg_word_block_7$D_IN = ma_get_inputs_val[31:28] ;
  assign rg_word_block_7$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_8
  assign rg_word_block_8$D_IN = ma_get_inputs_val[35:32] ;
  assign rg_word_block_8$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_block_9
  assign rg_word_block_9$D_IN = ma_get_inputs_val[39:36] ;
  assign rg_word_block_9$EN = MUX_rg_word_counter$write_1__SEL_1 ;

  // register rg_word_counter
  assign rg_word_counter$D_IN =
	     MUX_rg_word_counter$write_1__SEL_1 ?
	       5'd0 :
	       lv_update_count__h5507 ;
  assign rg_word_counter$EN =
	     EN_ma_get_inputs && rg_count_valid ||
	     WILL_FIRE_RL_rl_decompress_word ;

  // register rg_word_valid
  assign rg_word_valid$D_IN = MUX_rg_word_counter$write_1__SEL_1 ;
  assign rg_word_valid$EN =
	     EN_ma_get_inputs && rg_count_valid ||
	     WILL_FIRE_RL_rl_decompress_word &&
	     lv_update_count__h5507 == 5'd16 ;

  // register rg_word_width
  assign rg_word_width$D_IN = ma_get_inputs_val[3:0] ;
  assign rg_word_width$EN =
	     EN_ma_get_inputs && !rg_count_valid && rg_zero_counter == 7'd0 ;

  // register rg_zero_counter
  assign rg_zero_counter$D_IN =
	     MUX_rg_count_valid$write_1__SEL_1 ?
	       MUX_rg_zero_counter$write_1__VAL_1 :
	       MUX_rg_zero_counter$write_1__VAL_2 ;
  assign rg_zero_counter$EN =
	     EN_ma_get_inputs && !rg_count_valid ||
	     WILL_FIRE_RL_rl_update_counter ;

  // remaining internal signals
  assign IF_IF_rg_next_count_1_EQ_0_2_THEN_rg_count_wid_ETC___d218 =
	     (lv_allowed_count__h6905 <= 4'd7) ?
	       _theResult_____3__h6913 :
	       result__h7117 ;
  assign IF_rg_next_count_1_EQ_0_2_THEN_IF_IF_rg_next_c_ETC___d222 =
	     (rg_next_count == 4'd0) ?
	       IF_IF_rg_next_count_1_EQ_0_2_THEN_rg_count_wid_ETC___d218 :
	       result__h7094 ;
  assign IF_rg_next_count_1_EQ_0_2_THEN_rg_zero_counter_ETC___d278 =
	     lv_update_count__h6902 <= 7'd64 ;
  assign IF_rg_next_count_1_ULE_1_6_THEN_IF_rg_next_cou_ETC___d227 =
	     (rg_next_count <= 4'd1) ?
	       IF_rg_next_count_1_EQ_0_2_THEN_IF_IF_rg_next_c_ETC___d222 :
	       result__h7077 ;
  assign IF_rg_next_count_1_ULE_2_5_THEN_IF_rg_next_cou_ETC___d232 =
	     (rg_next_count <= 4'd2) ?
	       IF_rg_next_count_1_ULE_1_6_THEN_IF_rg_next_cou_ETC___d227 :
	       result__h7060 ;
  assign IF_rg_next_count_1_ULE_3_4_THEN_IF_rg_next_cou_ETC___d237 =
	     (rg_next_count <= 4'd3) ?
	       IF_rg_next_count_1_ULE_2_5_THEN_IF_rg_next_cou_ETC___d232 :
	       result__h7043 ;
  assign IF_rg_next_count_1_ULE_4_3_THEN_IF_rg_next_cou_ETC___d242 =
	     (rg_next_count <= 4'd4) ?
	       IF_rg_next_count_1_ULE_3_4_THEN_IF_rg_next_cou_ETC___d237 :
	       result__h7026 ;
  assign IF_rg_next_count_1_ULE_5_2_THEN_IF_rg_next_cou_ETC___d247 =
	     (rg_next_count <= 4'd5) ?
	       IF_rg_next_count_1_ULE_4_3_THEN_IF_rg_next_cou_ETC___d242 :
	       result__h7009 ;
  assign IF_rg_next_count_1_ULE_6_1_THEN_IF_rg_next_cou_ETC___d252 =
	     (rg_next_count <= 4'd6) ?
	       IF_rg_next_count_1_ULE_5_2_THEN_IF_rg_next_cou_ETC___d247 :
	       result__h6992 ;
  assign IF_rg_next_count_1_ULE_7_0_THEN_IF_rg_next_cou_ETC___d271 =
	     _theResult_____1__h6914 == y__h11729 ;
  assign IF_rg_word_width_0_ULE_1_6_THEN_0_ELSE_0_CONCA_ETC___d37 =
	     (rg_word_width <= 4'd1) ?
	       28'd0 :
	       { 24'd0, spliced_bits__h5801 } ;
  assign _theResult_____1__h6914 =
	     (rg_next_count <= 4'd7) ?
	       IF_rg_next_count_1_ULE_6_1_THEN_IF_rg_next_cou_ETC___d252 :
	       result__h6975 ;
  assign _theResult_____2__h5510 =
	     (rg_word_width <= 4'd2) ?
	       _theResult____h5509 :
	       { IF_rg_word_width_0_ULE_1_6_THEN_0_ELSE_0_CONCA_ETC___d37[27:12],
		 spliced_bits__h5745,
		 spliced_bits__h5772,
		 IF_rg_word_width_0_ULE_1_6_THEN_0_ELSE_0_CONCA_ETC___d37[3:0],
		 spliced_bits__h5828 } ;
  assign _theResult_____3__h6913 =
	     (lv_allowed_count__h6905 <= 4'd6) ?
	       _theResult_____4__h6912 :
	       result__h9283 ;
  assign _theResult_____4__h6912 =
	     (lv_allowed_count__h6905 <= 4'd5) ?
	       _theResult_____5__h6911 :
	       result__h9512 ;
  assign _theResult_____5__h6911 =
	     (lv_allowed_count__h6905 <= 4'd4) ?
	       _theResult_____6__h6910 :
	       result__h9741 ;
  assign _theResult_____6__h6910 =
	     (lv_allowed_count__h6905 <= 4'd3) ?
	       _theResult_____7__h6909 :
	       result__h9970 ;
  assign _theResult_____7__h6909 =
	     (lv_allowed_count__h6905 <= 4'd2) ?
	       _theResult_____8__h6908 :
	       result__h10199 ;
  assign _theResult_____8__h6908 =
	     (lv_allowed_count__h6905 <= 4'd1) ?
	       lv_zero_count__h6907 :
	       result__h10428 ;
  assign _theResult____h5509 =
	     { IF_rg_word_width_0_ULE_1_6_THEN_0_ELSE_0_CONCA_ETC___d37,
	       spliced_bits__h5828 } ;
  assign lv_allowed_count__h6905 =
	     (rg_next_count == 4'd0) ?
	       rg_count_width :
	       y_avValue_snd_snd__h6964 ;
  assign lv_update_count__h5507 = rg_word_counter + { 1'd0, rg_word_width } ;
  assign lv_update_count__h6833 = rg_zero_counter + { 3'd0, rg_count_width } ;
  assign lv_update_count__h6902 =
	     (rg_next_count == 4'd0) ?
	       lv_update_count__h6833 :
	       y_avValue_fst__h6895 ;
  assign lv_zero_count__h6907 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 ?
	       8'd1 << rg_next_count :
	       8'd0 ;
  assign result__h10199 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 ?
	       _theResult_____8__h6908 | x__h10198 :
	       _theResult_____8__h6908 & y__h10947 ;
  assign result__h10428 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 ?
	       lv_zero_count__h6907 | x__h10427 :
	       lv_zero_count__h6907 & y__h10922 ;
  assign result__h6975 =
	     { rg_counter[7],
	       IF_rg_next_count_1_ULE_6_1_THEN_IF_rg_next_cou_ETC___d252[6:0] } ;
  assign result__h6992 =
	     { IF_rg_next_count_1_ULE_5_2_THEN_IF_rg_next_cou_ETC___d247[7],
	       rg_counter[6],
	       IF_rg_next_count_1_ULE_5_2_THEN_IF_rg_next_cou_ETC___d247[5:0] } ;
  assign result__h7009 =
	     { IF_rg_next_count_1_ULE_4_3_THEN_IF_rg_next_cou_ETC___d242[7:6],
	       rg_counter[5],
	       IF_rg_next_count_1_ULE_4_3_THEN_IF_rg_next_cou_ETC___d242[4:0] } ;
  assign result__h7026 =
	     { IF_rg_next_count_1_ULE_3_4_THEN_IF_rg_next_cou_ETC___d237[7:5],
	       rg_counter[4],
	       IF_rg_next_count_1_ULE_3_4_THEN_IF_rg_next_cou_ETC___d237[3:0] } ;
  assign result__h7043 =
	     { IF_rg_next_count_1_ULE_2_5_THEN_IF_rg_next_cou_ETC___d232[7:4],
	       rg_counter[3],
	       IF_rg_next_count_1_ULE_2_5_THEN_IF_rg_next_cou_ETC___d232[2:0] } ;
  assign result__h7060 =
	     { IF_rg_next_count_1_ULE_1_6_THEN_IF_rg_next_cou_ETC___d227[7:3],
	       rg_counter[2],
	       IF_rg_next_count_1_ULE_1_6_THEN_IF_rg_next_cou_ETC___d227[1:0] } ;
  assign result__h7077 =
	     { IF_rg_next_count_1_EQ_0_2_THEN_IF_IF_rg_next_c_ETC___d222[7:2],
	       rg_counter[1],
	       IF_rg_next_count_1_EQ_0_2_THEN_IF_IF_rg_next_c_ETC___d222[0] } ;
  assign result__h7094 =
	     { IF_IF_rg_next_count_1_EQ_0_2_THEN_rg_count_wid_ETC___d218[7:1],
	       rg_counter[0] } ;
  assign result__h7117 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 ?
	       _theResult_____3__h6913 | x__h7116 :
	       _theResult_____3__h6913 & y__h11072 ;
  assign result__h9283 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 ?
	       _theResult_____4__h6912 | x__h9282 :
	       _theResult_____4__h6912 & y__h11047 ;
  assign result__h9512 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 ?
	       _theResult_____5__h6911 | x__h9511 :
	       _theResult_____5__h6911 & y__h11022 ;
  assign result__h9741 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 ?
	       _theResult_____6__h6910 | x__h9740 :
	       _theResult_____6__h6910 & y__h10997 ;
  assign result__h9970 =
	     SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 ?
	       _theResult_____7__h6909 | x__h9969 :
	       _theResult_____7__h6909 & y__h10972 ;
  assign x__h10198 = 8'd1 << x__h10926 ;
  assign x__h10208 = rg_zero_counter + 7'd2 ;
  assign x__h10427 = 8'd1 << x__h10901 ;
  assign x__h10437 = rg_zero_counter + 7'd1 ;
  assign x__h10901 = rg_next_count + 4'd1 ;
  assign x__h10926 = rg_next_count + 4'd2 ;
  assign x__h10951 = rg_next_count + 4'd3 ;
  assign x__h10976 = rg_next_count + 4'd4 ;
  assign x__h11001 = rg_next_count + 4'd5 ;
  assign x__h11026 = rg_next_count + 4'd6 ;
  assign x__h11051 = rg_next_count + 4'd7 ;
  assign x__h11551 = _theResult_____1__h6914 - 8'd1 ;
  assign x__h11652 = 7'd64 - rg_zero_counter ;
  assign x__h6417 = rg_word_counter + 5'd1 ;
  assign x__h6469 = rg_word_counter + 5'd2 ;
  assign x__h6520 = rg_word_counter + 5'd3 ;
  assign x__h6571 = rg_word_counter + 5'd4 ;
  assign x__h6622 = rg_word_counter + 5'd5 ;
  assign x__h6673 = rg_word_counter + 5'd6 ;
  assign x__h6723 = rg_word_counter + 5'd7 ;
  assign x__h7116 = 8'd1 << x__h11051 ;
  assign x__h7126 = rg_zero_counter + 7'd7 ;
  assign x__h9282 = 8'd1 << x__h11026 ;
  assign x__h9292 = rg_zero_counter + 7'd6 ;
  assign x__h9511 = 8'd1 << x__h11001 ;
  assign x__h9521 = rg_zero_counter + 7'd5 ;
  assign x__h9740 = 8'd1 << x__h10976 ;
  assign x__h9750 = rg_zero_counter + 7'd4 ;
  assign x__h9969 = 8'd1 << x__h10951 ;
  assign x__h9979 = rg_zero_counter + 7'd3 ;
  assign y__h10922 = ~x__h10427 ;
  assign y__h10947 = ~x__h10198 ;
  assign y__h10972 = ~x__h9969 ;
  assign y__h10997 = ~x__h9740 ;
  assign y__h11022 = ~x__h9511 ;
  assign y__h11047 = ~x__h9282 ;
  assign y__h11072 = ~x__h7116 ;
  assign y_avValue_fst__h6895 = { 3'd0, y_avValue_snd_snd__h6964 } ;
  assign y_avValue_snd_snd__h6964 = rg_count_width - rg_next_count ;
  always@(rg_word_counter or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (rg_word_counter)
      5'd0: spliced_bits__h5828 = rg_word_block_0;
      5'd1: spliced_bits__h5828 = rg_word_block_1;
      5'd2: spliced_bits__h5828 = rg_word_block_2;
      5'd3: spliced_bits__h5828 = rg_word_block_3;
      5'd4: spliced_bits__h5828 = rg_word_block_4;
      5'd5: spliced_bits__h5828 = rg_word_block_5;
      5'd6: spliced_bits__h5828 = rg_word_block_6;
      5'd7: spliced_bits__h5828 = rg_word_block_7;
      5'd8: spliced_bits__h5828 = rg_word_block_8;
      5'd9: spliced_bits__h5828 = rg_word_block_9;
      5'd10: spliced_bits__h5828 = rg_word_block_10;
      5'd11: spliced_bits__h5828 = rg_word_block_11;
      5'd12: spliced_bits__h5828 = rg_word_block_12;
      5'd13: spliced_bits__h5828 = rg_word_block_13;
      5'd14: spliced_bits__h5828 = rg_word_block_14;
      5'd15: spliced_bits__h5828 = rg_word_block_15;
      default: spliced_bits__h5828 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(rg_count_width)
  begin
    case (rg_count_width)
      4'd1: y__h11729 = 8'd1;
      4'd2: y__h11729 = 8'd3;
      4'd3: y__h11729 = 8'd7;
      4'd4: y__h11729 = 8'd15;
      4'd5: y__h11729 = 8'd31;
      4'd6: y__h11729 = 8'd63;
      4'd7: y__h11729 = 8'd127;
      default: y__h11729 = 8'd255;
    endcase
  end
  always@(x__h6417 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6417)
      5'd0: spliced_bits__h5801 = rg_word_block_0;
      5'd1: spliced_bits__h5801 = rg_word_block_1;
      5'd2: spliced_bits__h5801 = rg_word_block_2;
      5'd3: spliced_bits__h5801 = rg_word_block_3;
      5'd4: spliced_bits__h5801 = rg_word_block_4;
      5'd5: spliced_bits__h5801 = rg_word_block_5;
      5'd6: spliced_bits__h5801 = rg_word_block_6;
      5'd7: spliced_bits__h5801 = rg_word_block_7;
      5'd8: spliced_bits__h5801 = rg_word_block_8;
      5'd9: spliced_bits__h5801 = rg_word_block_9;
      5'd10: spliced_bits__h5801 = rg_word_block_10;
      5'd11: spliced_bits__h5801 = rg_word_block_11;
      5'd12: spliced_bits__h5801 = rg_word_block_12;
      5'd13: spliced_bits__h5801 = rg_word_block_13;
      5'd14: spliced_bits__h5801 = rg_word_block_14;
      5'd15: spliced_bits__h5801 = rg_word_block_15;
      default: spliced_bits__h5801 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h6469 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6469)
      5'd0: spliced_bits__h5772 = rg_word_block_0;
      5'd1: spliced_bits__h5772 = rg_word_block_1;
      5'd2: spliced_bits__h5772 = rg_word_block_2;
      5'd3: spliced_bits__h5772 = rg_word_block_3;
      5'd4: spliced_bits__h5772 = rg_word_block_4;
      5'd5: spliced_bits__h5772 = rg_word_block_5;
      5'd6: spliced_bits__h5772 = rg_word_block_6;
      5'd7: spliced_bits__h5772 = rg_word_block_7;
      5'd8: spliced_bits__h5772 = rg_word_block_8;
      5'd9: spliced_bits__h5772 = rg_word_block_9;
      5'd10: spliced_bits__h5772 = rg_word_block_10;
      5'd11: spliced_bits__h5772 = rg_word_block_11;
      5'd12: spliced_bits__h5772 = rg_word_block_12;
      5'd13: spliced_bits__h5772 = rg_word_block_13;
      5'd14: spliced_bits__h5772 = rg_word_block_14;
      5'd15: spliced_bits__h5772 = rg_word_block_15;
      default: spliced_bits__h5772 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h6520 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6520)
      5'd0: spliced_bits__h5745 = rg_word_block_0;
      5'd1: spliced_bits__h5745 = rg_word_block_1;
      5'd2: spliced_bits__h5745 = rg_word_block_2;
      5'd3: spliced_bits__h5745 = rg_word_block_3;
      5'd4: spliced_bits__h5745 = rg_word_block_4;
      5'd5: spliced_bits__h5745 = rg_word_block_5;
      5'd6: spliced_bits__h5745 = rg_word_block_6;
      5'd7: spliced_bits__h5745 = rg_word_block_7;
      5'd8: spliced_bits__h5745 = rg_word_block_8;
      5'd9: spliced_bits__h5745 = rg_word_block_9;
      5'd10: spliced_bits__h5745 = rg_word_block_10;
      5'd11: spliced_bits__h5745 = rg_word_block_11;
      5'd12: spliced_bits__h5745 = rg_word_block_12;
      5'd13: spliced_bits__h5745 = rg_word_block_13;
      5'd14: spliced_bits__h5745 = rg_word_block_14;
      5'd15: spliced_bits__h5745 = rg_word_block_15;
      default: spliced_bits__h5745 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h6622 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6622)
      5'd0: spliced_bits__h5688 = rg_word_block_0;
      5'd1: spliced_bits__h5688 = rg_word_block_1;
      5'd2: spliced_bits__h5688 = rg_word_block_2;
      5'd3: spliced_bits__h5688 = rg_word_block_3;
      5'd4: spliced_bits__h5688 = rg_word_block_4;
      5'd5: spliced_bits__h5688 = rg_word_block_5;
      5'd6: spliced_bits__h5688 = rg_word_block_6;
      5'd7: spliced_bits__h5688 = rg_word_block_7;
      5'd8: spliced_bits__h5688 = rg_word_block_8;
      5'd9: spliced_bits__h5688 = rg_word_block_9;
      5'd10: spliced_bits__h5688 = rg_word_block_10;
      5'd11: spliced_bits__h5688 = rg_word_block_11;
      5'd12: spliced_bits__h5688 = rg_word_block_12;
      5'd13: spliced_bits__h5688 = rg_word_block_13;
      5'd14: spliced_bits__h5688 = rg_word_block_14;
      5'd15: spliced_bits__h5688 = rg_word_block_15;
      default: spliced_bits__h5688 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h6571 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6571)
      5'd0: spliced_bits__h5715 = rg_word_block_0;
      5'd1: spliced_bits__h5715 = rg_word_block_1;
      5'd2: spliced_bits__h5715 = rg_word_block_2;
      5'd3: spliced_bits__h5715 = rg_word_block_3;
      5'd4: spliced_bits__h5715 = rg_word_block_4;
      5'd5: spliced_bits__h5715 = rg_word_block_5;
      5'd6: spliced_bits__h5715 = rg_word_block_6;
      5'd7: spliced_bits__h5715 = rg_word_block_7;
      5'd8: spliced_bits__h5715 = rg_word_block_8;
      5'd9: spliced_bits__h5715 = rg_word_block_9;
      5'd10: spliced_bits__h5715 = rg_word_block_10;
      5'd11: spliced_bits__h5715 = rg_word_block_11;
      5'd12: spliced_bits__h5715 = rg_word_block_12;
      5'd13: spliced_bits__h5715 = rg_word_block_13;
      5'd14: spliced_bits__h5715 = rg_word_block_14;
      5'd15: spliced_bits__h5715 = rg_word_block_15;
      default: spliced_bits__h5715 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h6673 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6673)
      5'd0: spliced_bits__h5660 = rg_word_block_0;
      5'd1: spliced_bits__h5660 = rg_word_block_1;
      5'd2: spliced_bits__h5660 = rg_word_block_2;
      5'd3: spliced_bits__h5660 = rg_word_block_3;
      5'd4: spliced_bits__h5660 = rg_word_block_4;
      5'd5: spliced_bits__h5660 = rg_word_block_5;
      5'd6: spliced_bits__h5660 = rg_word_block_6;
      5'd7: spliced_bits__h5660 = rg_word_block_7;
      5'd8: spliced_bits__h5660 = rg_word_block_8;
      5'd9: spliced_bits__h5660 = rg_word_block_9;
      5'd10: spliced_bits__h5660 = rg_word_block_10;
      5'd11: spliced_bits__h5660 = rg_word_block_11;
      5'd12: spliced_bits__h5660 = rg_word_block_12;
      5'd13: spliced_bits__h5660 = rg_word_block_13;
      5'd14: spliced_bits__h5660 = rg_word_block_14;
      5'd15: spliced_bits__h5660 = rg_word_block_15;
      default: spliced_bits__h5660 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h6723 or
	  rg_word_block_0 or
	  rg_word_block_1 or
	  rg_word_block_2 or
	  rg_word_block_3 or
	  rg_word_block_4 or
	  rg_word_block_5 or
	  rg_word_block_6 or
	  rg_word_block_7 or
	  rg_word_block_8 or
	  rg_word_block_9 or
	  rg_word_block_10 or
	  rg_word_block_11 or
	  rg_word_block_12 or
	  rg_word_block_13 or rg_word_block_14 or rg_word_block_15)
  begin
    case (x__h6723)
      5'd0: spliced_bits__h5632 = rg_word_block_0;
      5'd1: spliced_bits__h5632 = rg_word_block_1;
      5'd2: spliced_bits__h5632 = rg_word_block_2;
      5'd3: spliced_bits__h5632 = rg_word_block_3;
      5'd4: spliced_bits__h5632 = rg_word_block_4;
      5'd5: spliced_bits__h5632 = rg_word_block_5;
      5'd6: spliced_bits__h5632 = rg_word_block_6;
      5'd7: spliced_bits__h5632 = rg_word_block_7;
      5'd8: spliced_bits__h5632 = rg_word_block_8;
      5'd9: spliced_bits__h5632 = rg_word_block_9;
      5'd10: spliced_bits__h5632 = rg_word_block_10;
      5'd11: spliced_bits__h5632 = rg_word_block_11;
      5'd12: spliced_bits__h5632 = rg_word_block_12;
      5'd13: spliced_bits__h5632 = rg_word_block_13;
      5'd14: spliced_bits__h5632 = rg_word_block_14;
      5'd15: spliced_bits__h5632 = rg_word_block_15;
      default: spliced_bits__h5632 = 4'b1010 /* unspecified value */ ;
    endcase
  end
  always@(x__h10437 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h10437)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d157 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(rg_zero_counter or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (rg_zero_counter)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d153 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(x__h10208 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h10208)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d166 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(x__h9979 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h9979)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d175 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(x__h9750 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h9750)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d184 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(x__h9521 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h9521)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d193 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(x__h9292 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h9292)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d202 =
		   1'b0 /* unspecified value */ ;
    endcase
  end
  always@(x__h7126 or
	  rg_count_block_0 or
	  rg_count_block_1 or
	  rg_count_block_2 or
	  rg_count_block_3 or
	  rg_count_block_4 or
	  rg_count_block_5 or
	  rg_count_block_6 or
	  rg_count_block_7 or
	  rg_count_block_8 or
	  rg_count_block_9 or
	  rg_count_block_10 or
	  rg_count_block_11 or
	  rg_count_block_12 or
	  rg_count_block_13 or
	  rg_count_block_14 or
	  rg_count_block_15 or
	  rg_count_block_16 or
	  rg_count_block_17 or
	  rg_count_block_18 or
	  rg_count_block_19 or
	  rg_count_block_20 or
	  rg_count_block_21 or
	  rg_count_block_22 or
	  rg_count_block_23 or
	  rg_count_block_24 or
	  rg_count_block_25 or
	  rg_count_block_26 or
	  rg_count_block_27 or
	  rg_count_block_28 or
	  rg_count_block_29 or
	  rg_count_block_30 or
	  rg_count_block_31 or
	  rg_count_block_32 or
	  rg_count_block_33 or
	  rg_count_block_34 or
	  rg_count_block_35 or
	  rg_count_block_36 or
	  rg_count_block_37 or
	  rg_count_block_38 or
	  rg_count_block_39 or
	  rg_count_block_40 or
	  rg_count_block_41 or
	  rg_count_block_42 or
	  rg_count_block_43 or
	  rg_count_block_44 or
	  rg_count_block_45 or
	  rg_count_block_46 or
	  rg_count_block_47 or
	  rg_count_block_48 or
	  rg_count_block_49 or
	  rg_count_block_50 or
	  rg_count_block_51 or
	  rg_count_block_52 or
	  rg_count_block_53 or
	  rg_count_block_54 or
	  rg_count_block_55 or
	  rg_count_block_56 or
	  rg_count_block_57 or
	  rg_count_block_58 or
	  rg_count_block_59 or
	  rg_count_block_60 or
	  rg_count_block_61 or rg_count_block_62 or rg_count_block_63)
  begin
    case (x__h7126)
      7'd0:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_0;
      7'd1:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_1;
      7'd2:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_2;
      7'd3:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_3;
      7'd4:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_4;
      7'd5:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_5;
      7'd6:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_6;
      7'd7:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_7;
      7'd8:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_8;
      7'd9:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_9;
      7'd10:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_10;
      7'd11:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_11;
      7'd12:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_12;
      7'd13:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_13;
      7'd14:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_14;
      7'd15:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_15;
      7'd16:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_16;
      7'd17:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_17;
      7'd18:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_18;
      7'd19:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_19;
      7'd20:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_20;
      7'd21:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_21;
      7'd22:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_22;
      7'd23:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_23;
      7'd24:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_24;
      7'd25:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_25;
      7'd26:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_26;
      7'd27:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_27;
      7'd28:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_28;
      7'd29:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_29;
      7'd30:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_30;
      7'd31:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_31;
      7'd32:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_32;
      7'd33:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_33;
      7'd34:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_34;
      7'd35:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_35;
      7'd36:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_36;
      7'd37:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_37;
      7'd38:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_38;
      7'd39:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_39;
      7'd40:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_40;
      7'd41:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_41;
      7'd42:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_42;
      7'd43:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_43;
      7'd44:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_44;
      7'd45:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_45;
      7'd46:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_46;
      7'd47:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_47;
      7'd48:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_48;
      7'd49:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_49;
      7'd50:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_50;
      7'd51:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_51;
      7'd52:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_52;
      7'd53:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_53;
      7'd54:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_54;
      7'd55:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_55;
      7'd56:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_56;
      7'd57:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_57;
      7'd58:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_58;
      7'd59:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_59;
      7'd60:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_60;
      7'd61:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_61;
      7'd62:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_62;
      7'd63:
	  SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
	      rg_count_block_63;
      default: SEL_ARR_rg_count_block_0_7_rg_count_block_1_8__ETC___d211 =
		   1'b0 /* unspecified value */ ;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_count_block_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_10 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_11 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_12 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_13 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_14 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_15 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_16 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_17 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_18 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_19 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_20 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_21 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_22 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_23 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_24 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_25 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_26 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_27 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_28 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_29 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_30 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_31 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_32 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_33 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_34 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_35 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_36 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_37 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_38 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_39 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_40 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_41 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_42 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_43 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_44 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_45 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_46 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_47 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_48 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_49 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_5 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_50 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_51 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_52 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_53 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_54 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_55 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_56 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_57 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_58 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_59 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_6 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_60 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_61 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_62 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_63 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_7 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_8 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_block_9 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_count_width <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_counter <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_counter_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_is_next_word <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_next_count <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_0 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_1 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_10 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_11 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_12 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_13 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_14 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_15 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_2 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_3 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_4 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_5 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_6 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_7 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_8 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_block_9 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_word_counter <= `BSV_ASSIGNMENT_DELAY 5'd0;
	rg_word_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_word_width <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_zero_counter <= `BSV_ASSIGNMENT_DELAY 7'd0;
      end
    else
      begin
        if (rg_count_block_0$EN)
	  rg_count_block_0 <= `BSV_ASSIGNMENT_DELAY rg_count_block_0$D_IN;
	if (rg_count_block_1$EN)
	  rg_count_block_1 <= `BSV_ASSIGNMENT_DELAY rg_count_block_1$D_IN;
	if (rg_count_block_10$EN)
	  rg_count_block_10 <= `BSV_ASSIGNMENT_DELAY rg_count_block_10$D_IN;
	if (rg_count_block_11$EN)
	  rg_count_block_11 <= `BSV_ASSIGNMENT_DELAY rg_count_block_11$D_IN;
	if (rg_count_block_12$EN)
	  rg_count_block_12 <= `BSV_ASSIGNMENT_DELAY rg_count_block_12$D_IN;
	if (rg_count_block_13$EN)
	  rg_count_block_13 <= `BSV_ASSIGNMENT_DELAY rg_count_block_13$D_IN;
	if (rg_count_block_14$EN)
	  rg_count_block_14 <= `BSV_ASSIGNMENT_DELAY rg_count_block_14$D_IN;
	if (rg_count_block_15$EN)
	  rg_count_block_15 <= `BSV_ASSIGNMENT_DELAY rg_count_block_15$D_IN;
	if (rg_count_block_16$EN)
	  rg_count_block_16 <= `BSV_ASSIGNMENT_DELAY rg_count_block_16$D_IN;
	if (rg_count_block_17$EN)
	  rg_count_block_17 <= `BSV_ASSIGNMENT_DELAY rg_count_block_17$D_IN;
	if (rg_count_block_18$EN)
	  rg_count_block_18 <= `BSV_ASSIGNMENT_DELAY rg_count_block_18$D_IN;
	if (rg_count_block_19$EN)
	  rg_count_block_19 <= `BSV_ASSIGNMENT_DELAY rg_count_block_19$D_IN;
	if (rg_count_block_2$EN)
	  rg_count_block_2 <= `BSV_ASSIGNMENT_DELAY rg_count_block_2$D_IN;
	if (rg_count_block_20$EN)
	  rg_count_block_20 <= `BSV_ASSIGNMENT_DELAY rg_count_block_20$D_IN;
	if (rg_count_block_21$EN)
	  rg_count_block_21 <= `BSV_ASSIGNMENT_DELAY rg_count_block_21$D_IN;
	if (rg_count_block_22$EN)
	  rg_count_block_22 <= `BSV_ASSIGNMENT_DELAY rg_count_block_22$D_IN;
	if (rg_count_block_23$EN)
	  rg_count_block_23 <= `BSV_ASSIGNMENT_DELAY rg_count_block_23$D_IN;
	if (rg_count_block_24$EN)
	  rg_count_block_24 <= `BSV_ASSIGNMENT_DELAY rg_count_block_24$D_IN;
	if (rg_count_block_25$EN)
	  rg_count_block_25 <= `BSV_ASSIGNMENT_DELAY rg_count_block_25$D_IN;
	if (rg_count_block_26$EN)
	  rg_count_block_26 <= `BSV_ASSIGNMENT_DELAY rg_count_block_26$D_IN;
	if (rg_count_block_27$EN)
	  rg_count_block_27 <= `BSV_ASSIGNMENT_DELAY rg_count_block_27$D_IN;
	if (rg_count_block_28$EN)
	  rg_count_block_28 <= `BSV_ASSIGNMENT_DELAY rg_count_block_28$D_IN;
	if (rg_count_block_29$EN)
	  rg_count_block_29 <= `BSV_ASSIGNMENT_DELAY rg_count_block_29$D_IN;
	if (rg_count_block_3$EN)
	  rg_count_block_3 <= `BSV_ASSIGNMENT_DELAY rg_count_block_3$D_IN;
	if (rg_count_block_30$EN)
	  rg_count_block_30 <= `BSV_ASSIGNMENT_DELAY rg_count_block_30$D_IN;
	if (rg_count_block_31$EN)
	  rg_count_block_31 <= `BSV_ASSIGNMENT_DELAY rg_count_block_31$D_IN;
	if (rg_count_block_32$EN)
	  rg_count_block_32 <= `BSV_ASSIGNMENT_DELAY rg_count_block_32$D_IN;
	if (rg_count_block_33$EN)
	  rg_count_block_33 <= `BSV_ASSIGNMENT_DELAY rg_count_block_33$D_IN;
	if (rg_count_block_34$EN)
	  rg_count_block_34 <= `BSV_ASSIGNMENT_DELAY rg_count_block_34$D_IN;
	if (rg_count_block_35$EN)
	  rg_count_block_35 <= `BSV_ASSIGNMENT_DELAY rg_count_block_35$D_IN;
	if (rg_count_block_36$EN)
	  rg_count_block_36 <= `BSV_ASSIGNMENT_DELAY rg_count_block_36$D_IN;
	if (rg_count_block_37$EN)
	  rg_count_block_37 <= `BSV_ASSIGNMENT_DELAY rg_count_block_37$D_IN;
	if (rg_count_block_38$EN)
	  rg_count_block_38 <= `BSV_ASSIGNMENT_DELAY rg_count_block_38$D_IN;
	if (rg_count_block_39$EN)
	  rg_count_block_39 <= `BSV_ASSIGNMENT_DELAY rg_count_block_39$D_IN;
	if (rg_count_block_4$EN)
	  rg_count_block_4 <= `BSV_ASSIGNMENT_DELAY rg_count_block_4$D_IN;
	if (rg_count_block_40$EN)
	  rg_count_block_40 <= `BSV_ASSIGNMENT_DELAY rg_count_block_40$D_IN;
	if (rg_count_block_41$EN)
	  rg_count_block_41 <= `BSV_ASSIGNMENT_DELAY rg_count_block_41$D_IN;
	if (rg_count_block_42$EN)
	  rg_count_block_42 <= `BSV_ASSIGNMENT_DELAY rg_count_block_42$D_IN;
	if (rg_count_block_43$EN)
	  rg_count_block_43 <= `BSV_ASSIGNMENT_DELAY rg_count_block_43$D_IN;
	if (rg_count_block_44$EN)
	  rg_count_block_44 <= `BSV_ASSIGNMENT_DELAY rg_count_block_44$D_IN;
	if (rg_count_block_45$EN)
	  rg_count_block_45 <= `BSV_ASSIGNMENT_DELAY rg_count_block_45$D_IN;
	if (rg_count_block_46$EN)
	  rg_count_block_46 <= `BSV_ASSIGNMENT_DELAY rg_count_block_46$D_IN;
	if (rg_count_block_47$EN)
	  rg_count_block_47 <= `BSV_ASSIGNMENT_DELAY rg_count_block_47$D_IN;
	if (rg_count_block_48$EN)
	  rg_count_block_48 <= `BSV_ASSIGNMENT_DELAY rg_count_block_48$D_IN;
	if (rg_count_block_49$EN)
	  rg_count_block_49 <= `BSV_ASSIGNMENT_DELAY rg_count_block_49$D_IN;
	if (rg_count_block_5$EN)
	  rg_count_block_5 <= `BSV_ASSIGNMENT_DELAY rg_count_block_5$D_IN;
	if (rg_count_block_50$EN)
	  rg_count_block_50 <= `BSV_ASSIGNMENT_DELAY rg_count_block_50$D_IN;
	if (rg_count_block_51$EN)
	  rg_count_block_51 <= `BSV_ASSIGNMENT_DELAY rg_count_block_51$D_IN;
	if (rg_count_block_52$EN)
	  rg_count_block_52 <= `BSV_ASSIGNMENT_DELAY rg_count_block_52$D_IN;
	if (rg_count_block_53$EN)
	  rg_count_block_53 <= `BSV_ASSIGNMENT_DELAY rg_count_block_53$D_IN;
	if (rg_count_block_54$EN)
	  rg_count_block_54 <= `BSV_ASSIGNMENT_DELAY rg_count_block_54$D_IN;
	if (rg_count_block_55$EN)
	  rg_count_block_55 <= `BSV_ASSIGNMENT_DELAY rg_count_block_55$D_IN;
	if (rg_count_block_56$EN)
	  rg_count_block_56 <= `BSV_ASSIGNMENT_DELAY rg_count_block_56$D_IN;
	if (rg_count_block_57$EN)
	  rg_count_block_57 <= `BSV_ASSIGNMENT_DELAY rg_count_block_57$D_IN;
	if (rg_count_block_58$EN)
	  rg_count_block_58 <= `BSV_ASSIGNMENT_DELAY rg_count_block_58$D_IN;
	if (rg_count_block_59$EN)
	  rg_count_block_59 <= `BSV_ASSIGNMENT_DELAY rg_count_block_59$D_IN;
	if (rg_count_block_6$EN)
	  rg_count_block_6 <= `BSV_ASSIGNMENT_DELAY rg_count_block_6$D_IN;
	if (rg_count_block_60$EN)
	  rg_count_block_60 <= `BSV_ASSIGNMENT_DELAY rg_count_block_60$D_IN;
	if (rg_count_block_61$EN)
	  rg_count_block_61 <= `BSV_ASSIGNMENT_DELAY rg_count_block_61$D_IN;
	if (rg_count_block_62$EN)
	  rg_count_block_62 <= `BSV_ASSIGNMENT_DELAY rg_count_block_62$D_IN;
	if (rg_count_block_63$EN)
	  rg_count_block_63 <= `BSV_ASSIGNMENT_DELAY rg_count_block_63$D_IN;
	if (rg_count_block_7$EN)
	  rg_count_block_7 <= `BSV_ASSIGNMENT_DELAY rg_count_block_7$D_IN;
	if (rg_count_block_8$EN)
	  rg_count_block_8 <= `BSV_ASSIGNMENT_DELAY rg_count_block_8$D_IN;
	if (rg_count_block_9$EN)
	  rg_count_block_9 <= `BSV_ASSIGNMENT_DELAY rg_count_block_9$D_IN;
	if (rg_count_valid$EN)
	  rg_count_valid <= `BSV_ASSIGNMENT_DELAY rg_count_valid$D_IN;
	if (rg_count_width$EN)
	  rg_count_width <= `BSV_ASSIGNMENT_DELAY rg_count_width$D_IN;
	if (rg_counter$EN)
	  rg_counter <= `BSV_ASSIGNMENT_DELAY rg_counter$D_IN;
	if (rg_counter_valid$EN)
	  rg_counter_valid <= `BSV_ASSIGNMENT_DELAY rg_counter_valid$D_IN;
	if (rg_is_next_word$EN)
	  rg_is_next_word <= `BSV_ASSIGNMENT_DELAY rg_is_next_word$D_IN;
	if (rg_next_count$EN)
	  rg_next_count <= `BSV_ASSIGNMENT_DELAY rg_next_count$D_IN;
	if (rg_word_block_0$EN)
	  rg_word_block_0 <= `BSV_ASSIGNMENT_DELAY rg_word_block_0$D_IN;
	if (rg_word_block_1$EN)
	  rg_word_block_1 <= `BSV_ASSIGNMENT_DELAY rg_word_block_1$D_IN;
	if (rg_word_block_10$EN)
	  rg_word_block_10 <= `BSV_ASSIGNMENT_DELAY rg_word_block_10$D_IN;
	if (rg_word_block_11$EN)
	  rg_word_block_11 <= `BSV_ASSIGNMENT_DELAY rg_word_block_11$D_IN;
	if (rg_word_block_12$EN)
	  rg_word_block_12 <= `BSV_ASSIGNMENT_DELAY rg_word_block_12$D_IN;
	if (rg_word_block_13$EN)
	  rg_word_block_13 <= `BSV_ASSIGNMENT_DELAY rg_word_block_13$D_IN;
	if (rg_word_block_14$EN)
	  rg_word_block_14 <= `BSV_ASSIGNMENT_DELAY rg_word_block_14$D_IN;
	if (rg_word_block_15$EN)
	  rg_word_block_15 <= `BSV_ASSIGNMENT_DELAY rg_word_block_15$D_IN;
	if (rg_word_block_2$EN)
	  rg_word_block_2 <= `BSV_ASSIGNMENT_DELAY rg_word_block_2$D_IN;
	if (rg_word_block_3$EN)
	  rg_word_block_3 <= `BSV_ASSIGNMENT_DELAY rg_word_block_3$D_IN;
	if (rg_word_block_4$EN)
	  rg_word_block_4 <= `BSV_ASSIGNMENT_DELAY rg_word_block_4$D_IN;
	if (rg_word_block_5$EN)
	  rg_word_block_5 <= `BSV_ASSIGNMENT_DELAY rg_word_block_5$D_IN;
	if (rg_word_block_6$EN)
	  rg_word_block_6 <= `BSV_ASSIGNMENT_DELAY rg_word_block_6$D_IN;
	if (rg_word_block_7$EN)
	  rg_word_block_7 <= `BSV_ASSIGNMENT_DELAY rg_word_block_7$D_IN;
	if (rg_word_block_8$EN)
	  rg_word_block_8 <= `BSV_ASSIGNMENT_DELAY rg_word_block_8$D_IN;
	if (rg_word_block_9$EN)
	  rg_word_block_9 <= `BSV_ASSIGNMENT_DELAY rg_word_block_9$D_IN;
	if (rg_word_counter$EN)
	  rg_word_counter <= `BSV_ASSIGNMENT_DELAY rg_word_counter$D_IN;
	if (rg_word_valid$EN)
	  rg_word_valid <= `BSV_ASSIGNMENT_DELAY rg_word_valid$D_IN;
	if (rg_word_width$EN)
	  rg_word_width <= `BSV_ASSIGNMENT_DELAY rg_word_width$D_IN;
	if (rg_zero_counter$EN)
	  rg_zero_counter <= `BSV_ASSIGNMENT_DELAY rg_zero_counter$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_count_block_0 = 1'h0;
    rg_count_block_1 = 1'h0;
    rg_count_block_10 = 1'h0;
    rg_count_block_11 = 1'h0;
    rg_count_block_12 = 1'h0;
    rg_count_block_13 = 1'h0;
    rg_count_block_14 = 1'h0;
    rg_count_block_15 = 1'h0;
    rg_count_block_16 = 1'h0;
    rg_count_block_17 = 1'h0;
    rg_count_block_18 = 1'h0;
    rg_count_block_19 = 1'h0;
    rg_count_block_2 = 1'h0;
    rg_count_block_20 = 1'h0;
    rg_count_block_21 = 1'h0;
    rg_count_block_22 = 1'h0;
    rg_count_block_23 = 1'h0;
    rg_count_block_24 = 1'h0;
    rg_count_block_25 = 1'h0;
    rg_count_block_26 = 1'h0;
    rg_count_block_27 = 1'h0;
    rg_count_block_28 = 1'h0;
    rg_count_block_29 = 1'h0;
    rg_count_block_3 = 1'h0;
    rg_count_block_30 = 1'h0;
    rg_count_block_31 = 1'h0;
    rg_count_block_32 = 1'h0;
    rg_count_block_33 = 1'h0;
    rg_count_block_34 = 1'h0;
    rg_count_block_35 = 1'h0;
    rg_count_block_36 = 1'h0;
    rg_count_block_37 = 1'h0;
    rg_count_block_38 = 1'h0;
    rg_count_block_39 = 1'h0;
    rg_count_block_4 = 1'h0;
    rg_count_block_40 = 1'h0;
    rg_count_block_41 = 1'h0;
    rg_count_block_42 = 1'h0;
    rg_count_block_43 = 1'h0;
    rg_count_block_44 = 1'h0;
    rg_count_block_45 = 1'h0;
    rg_count_block_46 = 1'h0;
    rg_count_block_47 = 1'h0;
    rg_count_block_48 = 1'h0;
    rg_count_block_49 = 1'h0;
    rg_count_block_5 = 1'h0;
    rg_count_block_50 = 1'h0;
    rg_count_block_51 = 1'h0;
    rg_count_block_52 = 1'h0;
    rg_count_block_53 = 1'h0;
    rg_count_block_54 = 1'h0;
    rg_count_block_55 = 1'h0;
    rg_count_block_56 = 1'h0;
    rg_count_block_57 = 1'h0;
    rg_count_block_58 = 1'h0;
    rg_count_block_59 = 1'h0;
    rg_count_block_6 = 1'h0;
    rg_count_block_60 = 1'h0;
    rg_count_block_61 = 1'h0;
    rg_count_block_62 = 1'h0;
    rg_count_block_63 = 1'h0;
    rg_count_block_7 = 1'h0;
    rg_count_block_8 = 1'h0;
    rg_count_block_9 = 1'h0;
    rg_count_valid = 1'h0;
    rg_count_width = 4'hA;
    rg_counter = 8'hAA;
    rg_counter_valid = 1'h0;
    rg_is_next_word = 1'h0;
    rg_next_count = 4'hA;
    rg_word_block_0 = 4'hA;
    rg_word_block_1 = 4'hA;
    rg_word_block_10 = 4'hA;
    rg_word_block_11 = 4'hA;
    rg_word_block_12 = 4'hA;
    rg_word_block_13 = 4'hA;
    rg_word_block_14 = 4'hA;
    rg_word_block_15 = 4'hA;
    rg_word_block_2 = 4'hA;
    rg_word_block_3 = 4'hA;
    rg_word_block_4 = 4'hA;
    rg_word_block_5 = 4'hA;
    rg_word_block_6 = 4'hA;
    rg_word_block_7 = 4'hA;
    rg_word_block_8 = 4'hA;
    rg_word_block_9 = 4'hA;
    rg_word_counter = 5'h0A;
    rg_word_valid = 1'h0;
    rg_word_width = 4'hA;
    rg_zero_counter = 7'h2A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkrle_decompression

